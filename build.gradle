plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.7'
    id 'jacoco'
}

group 'com.misset'
version '2.0 - release candidate'

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs 'src/main/gen'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    compile group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.2.0'
    compile group: 'org.apache.jena', name: 'jena', version: '3.16.0', ext: 'pom' exclude group: 'org.slf4j'
    compile group: 'org.apache.jena', name: 'jena-core', version: '3.16.0' exclude group: 'org.slf4j'
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
}
test {
    useJUnitPlatform()
    // used for ITs
    systemProperty "idea.home.path", "C:/Program Files/JetBrains/IntelliJ IDEA Community Edition 2020.2"
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version '2020.2'
    plugins = ['java']
}
patchPluginXml {
    changeNotes """
      RDF Ontology is included in most parts of the validation and completion providers. Typing is checked where possible,
      resolves to an 'any' type for unknown or unresovable query-steps to prevent false-positive error annotations. 
      Annotation of parameters is possible (and suggested with light warnings) which will help to resolve the types. 
      Formatter is implemented, mostly based on YAML style, it also adds some formatting within queries.
      """
}
tasks{
    runIde {
        jvmArgs("-Xmx2000m")
    }
}
