{
  parserClass="org.intellij.sdk.language.parser.OMTParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="OMT"
  psiImplClassSuffix="Impl"
  psiPackage="com.misset.opp.omt.psi"
  psiImplPackage="com.misset.opp.omt.psi.impl"

  elementTypeHolderClass="com.misset.opp.omt.psi.OMTTypes"
  elementTypeClass="com.misset.opp.omt.psi.OMTElementType"
  tokenTypeClass="com.misset.opp.omt.psi.OMTTokenType"

  psiImplUtilClass="com.misset.opp.omt.psi.impl.OMTPsiImplUtil"
}

OMTFile ::= item_*

private item_ ::= (model|modelBlockGroup|COMMENT|CRLF)

modelBlockId ::= (KEY COLON)
property ::= (KEY EQUALS VALUE) | (variable EQUALS VALUE)
variable ::= (DOLLAR KEY variableType? variableValue?)
variableType ::= (PARENTHESIS_OPEN queryPath PARENTHESIS_CLOSED)
variableValue ::= (EQUALS VALUE)
listItem ::= (LISTITEM_BULLET variable)
inputArgument ::= (variable | VALUE)
inputArguments ::= (PARENTHESIS_OPEN (COMMA inputArgument | inputArgument)* PARENTHESIS_CLOSED )

prefix ::= (KEY EQUALS PREFIX_IRI)
queryPart ::= (inputArgument | queryPath)
queryStatement ::= (SLASH queryPart | queryPart)+
query ::= (QUERY_DEFINE VALUE inputArguments? QUERY_SEPARATOR queryStatement SEMICOLON)
queryPath ::= (KEY COLON KEY)

model ::= (modelBlockId modelItem+)
modelItem ::= (modelBlockId MODEL_ITEM_TYPE modelBlockGroup+)
modelBlockContent ::= (prefix+ | listItem+ | property+ | query+)+
modelBlockGroup ::= (modelBlockId modelBlockContent) | (modelBlockId modelBlockGroup) | (modelBlockId PIPE scriptBlock?)

variableDeclare ::= (DECLARE_VAR DOLLAR KEY variableValue?) | (DECLARE_VAR DOLLAR VALUE variableValue?)
variableAssignment ::= (DOLLAR KEY EQUALS VALUE) | (DOLLAR VALUE EQUALS VALUE)
scriptBlock ::= (variableDeclare | variableAssignment)*
